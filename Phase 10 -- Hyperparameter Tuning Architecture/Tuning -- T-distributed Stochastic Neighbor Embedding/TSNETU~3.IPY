{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a76f9c3f",
   "metadata": {},
   "source": [
    "# Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cb8d9727",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, f1_score, accuracy_score, classification_report"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "576dc0b5",
   "metadata": {},
   "source": [
    "# Exploratory Data AnalysisÂ¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c72bb47b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TSNE Element 1</th>\n",
       "      <th>TSNE Element 2</th>\n",
       "      <th>TSNE Element 3</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>334570</th>\n",
       "      <td>6.131857</td>\n",
       "      <td>-20.032824</td>\n",
       "      <td>-22.792007</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158054</th>\n",
       "      <td>-29.457537</td>\n",
       "      <td>-8.805551</td>\n",
       "      <td>-7.142072</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204316</th>\n",
       "      <td>22.774780</td>\n",
       "      <td>8.004857</td>\n",
       "      <td>-2.722176</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165783</th>\n",
       "      <td>-20.813328</td>\n",
       "      <td>-0.647660</td>\n",
       "      <td>15.209752</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13701</th>\n",
       "      <td>35.169872</td>\n",
       "      <td>-25.100710</td>\n",
       "      <td>-15.115420</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        TSNE Element 1  TSNE Element 2  TSNE Element 3  stimulus  restimulus\n",
       "334570        6.131857      -20.032824      -22.792007         0           0\n",
       "158054      -29.457537       -8.805551       -7.142072         0           0\n",
       "204316       22.774780        8.004857       -2.722176        32          32\n",
       "165783      -20.813328       -0.647660       15.209752         0           0\n",
       "13701        35.169872      -25.100710      -15.115420         0           0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data = pd.read_csv('TSNE_Subject_1.csv')\n",
    "raw_data.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a85e933c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(378535, 5)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e05e202f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['TSNE Element 1', 'TSNE Element 2', 'TSNE Element 3', 'stimulus',\n",
       "       'restimulus'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fde113c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 378535 entries, 0 to 378534\n",
      "Data columns (total 5 columns):\n",
      " #   Column          Non-Null Count   Dtype  \n",
      "---  ------          --------------   -----  \n",
      " 0   TSNE Element 1  378535 non-null  float64\n",
      " 1   TSNE Element 2  378535 non-null  float64\n",
      " 2   TSNE Element 3  378535 non-null  float64\n",
      " 3   stimulus        378535 non-null  int64  \n",
      " 4   restimulus      378535 non-null  int64  \n",
      "dtypes: float64(3), int64(2)\n",
      "memory usage: 14.4 MB\n"
     ]
    }
   ],
   "source": [
    "raw_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0ae97d58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TSNE Element 1</th>\n",
       "      <th>TSNE Element 2</th>\n",
       "      <th>TSNE Element 3</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>378535.000000</td>\n",
       "      <td>378535.000000</td>\n",
       "      <td>378535.000000</td>\n",
       "      <td>378535.000000</td>\n",
       "      <td>378535.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.040247</td>\n",
       "      <td>1.662873</td>\n",
       "      <td>-1.765831</td>\n",
       "      <td>13.268231</td>\n",
       "      <td>13.268231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>22.350302</td>\n",
       "      <td>22.460744</td>\n",
       "      <td>23.430280</td>\n",
       "      <td>17.514047</td>\n",
       "      <td>17.514047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-55.200640</td>\n",
       "      <td>-56.550953</td>\n",
       "      <td>-54.991833</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-16.302482</td>\n",
       "      <td>-14.717854</td>\n",
       "      <td>-19.790751</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-0.260713</td>\n",
       "      <td>1.906979</td>\n",
       "      <td>-1.771864</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>16.617624</td>\n",
       "      <td>18.426006</td>\n",
       "      <td>15.924356</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>28.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>58.190353</td>\n",
       "      <td>57.606556</td>\n",
       "      <td>58.211906</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>52.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       TSNE Element 1  TSNE Element 2  TSNE Element 3       stimulus  \\\n",
       "count   378535.000000   378535.000000   378535.000000  378535.000000   \n",
       "mean         0.040247        1.662873       -1.765831      13.268231   \n",
       "std         22.350302       22.460744       23.430280      17.514047   \n",
       "min        -55.200640      -56.550953      -54.991833       0.000000   \n",
       "25%        -16.302482      -14.717854      -19.790751       0.000000   \n",
       "50%         -0.260713        1.906979       -1.771864       0.000000   \n",
       "75%         16.617624       18.426006       15.924356      28.000000   \n",
       "max         58.190353       57.606556       58.211906      52.000000   \n",
       "\n",
       "          restimulus  \n",
       "count  378535.000000  \n",
       "mean       13.268231  \n",
       "std        17.514047  \n",
       "min         0.000000  \n",
       "25%         0.000000  \n",
       "50%         0.000000  \n",
       "75%        28.000000  \n",
       "max        52.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "071b96e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique Dependent values and their counts :\n",
      "0     199821\n",
      "52      4519\n",
      "50      4492\n",
      "51      4487\n",
      "35      4295\n",
      "43      4239\n",
      "40      4211\n",
      "29      4196\n",
      "45      4095\n",
      "39      4036\n",
      "47      4013\n",
      "5       3952\n",
      "46      3905\n",
      "41      3872\n",
      "48      3836\n",
      "49      3831\n",
      "34      3775\n",
      "1       3738\n",
      "31      3725\n",
      "32      3724\n",
      "33      3717\n",
      "3       3706\n",
      "24      3604\n",
      "42      3584\n",
      "18      3583\n",
      "30      3558\n",
      "21      3502\n",
      "28      3391\n",
      "13      3358\n",
      "44      3303\n",
      "38      3256\n",
      "37      3232\n",
      "36      3214\n",
      "14      3168\n",
      "15      3130\n",
      "12      3125\n",
      "19      3079\n",
      "25      3064\n",
      "6       3058\n",
      "10      3038\n",
      "22      3012\n",
      "4       2982\n",
      "16      2966\n",
      "8       2909\n",
      "20      2858\n",
      "23      2764\n",
      "27      2656\n",
      "2       2618\n",
      "7       2615\n",
      "9       2608\n",
      "17      2537\n",
      "11      2491\n",
      "26      2087\n",
      "Name: stimulus, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"Unique Dependent values and their counts :\")\n",
    "print(raw_data[\"stimulus\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "50a0f9be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Frequency')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_classes = pd.value_counts(raw_data['stimulus'], sort = True)\n",
    "\n",
    "count_classes.plot(kind = 'bar', rot=0)\n",
    "\n",
    "plt.title(\"stimulus Class Distribution\")\n",
    "\n",
    "plt.xlabel(\"Class\")\n",
    "\n",
    "plt.ylabel(\"Frequency\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "275440c4",
   "metadata": {},
   "source": [
    "# Data Cleaning and Exploratory Data Analysis with New Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e8ed6471",
   "metadata": {},
   "outputs": [],
   "source": [
    "index_names = raw_data[ (raw_data['stimulus'] != raw_data['restimulus'])].index\n",
    "raw_data.drop(index_names, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5ccb8950",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TSNE Element 1</th>\n",
       "      <th>TSNE Element 2</th>\n",
       "      <th>TSNE Element 3</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15702</th>\n",
       "      <td>42.764812</td>\n",
       "      <td>24.545248</td>\n",
       "      <td>-11.030310</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339700</th>\n",
       "      <td>15.246269</td>\n",
       "      <td>-18.312770</td>\n",
       "      <td>-24.498642</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>361067</th>\n",
       "      <td>33.331326</td>\n",
       "      <td>-1.928325</td>\n",
       "      <td>-29.982286</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13022</th>\n",
       "      <td>-25.671976</td>\n",
       "      <td>35.692920</td>\n",
       "      <td>26.062963</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>313806</th>\n",
       "      <td>37.341343</td>\n",
       "      <td>28.202847</td>\n",
       "      <td>-14.985306</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        TSNE Element 1  TSNE Element 2  TSNE Element 3  stimulus  restimulus\n",
       "15702        42.764812       24.545248      -11.030310         0           0\n",
       "339700       15.246269      -18.312770      -24.498642         0           0\n",
       "361067       33.331326       -1.928325      -29.982286         0           0\n",
       "13022       -25.671976       35.692920       26.062963         0           0\n",
       "313806       37.341343       28.202847      -14.985306        45          45"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ab84cf47",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(378535, 5)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fcb24936",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 378535 entries, 0 to 378534\n",
      "Data columns (total 5 columns):\n",
      " #   Column          Non-Null Count   Dtype  \n",
      "---  ------          --------------   -----  \n",
      " 0   TSNE Element 1  378535 non-null  float64\n",
      " 1   TSNE Element 2  378535 non-null  float64\n",
      " 2   TSNE Element 3  378535 non-null  float64\n",
      " 3   stimulus        378535 non-null  int64  \n",
      " 4   restimulus      378535 non-null  int64  \n",
      "dtypes: float64(3), int64(2)\n",
      "memory usage: 14.4 MB\n"
     ]
    }
   ],
   "source": [
    "raw_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8ada4ef1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TSNE Element 1    False\n",
      "TSNE Element 2    False\n",
      "TSNE Element 3    False\n",
      "stimulus          False\n",
      "restimulus        False\n",
      "dtype: bool\n"
     ]
    }
   ],
   "source": [
    "print(raw_data.isnull().any())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "138ec425",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = raw_data.iloc[:,0:3]\n",
    "y = raw_data.stimulus"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e657abbe",
   "metadata": {},
   "source": [
    "# Hyperparameter Tuning -- KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8955c1e6",
   "metadata": {},
   "source": [
    "https://www.section.io/engineering-education/hyperparmeter-tuning/\n",
    "    \n",
    "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "9c5f02c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "tuned_KNeighborsClassifier = KNeighborsClassifier()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "093460e7",
   "metadata": {},
   "source": [
    "## Current Parameters "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9b76c48c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameters currently in use:\n",
      "\n",
      "{'algorithm': 'auto',\n",
      " 'leaf_size': 30,\n",
      " 'metric': 'minkowski',\n",
      " 'metric_params': None,\n",
      " 'n_jobs': None,\n",
      " 'n_neighbors': 5,\n",
      " 'p': 2,\n",
      " 'weights': 'uniform'}\n"
     ]
    }
   ],
   "source": [
    "from pprint import pprint\n",
    "print('Parameters currently in use:\\n')\n",
    "pprint(tuned_KNeighborsClassifier.get_params())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0021e5e",
   "metadata": {},
   "source": [
    "## GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "de79ef78",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a4bf37ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid = {'algorithm': ['brute'],\n",
    "              'leaf_size': [30],\n",
    "              'metric': ['minkowski'],\n",
    "              'metric_params': [None],\n",
    "              'n_jobs': [None],\n",
    "              'n_neighbors': [5],\n",
    "              'p': [1],\n",
    "              'weights': ['uniform']}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ffaa6436",
   "metadata": {},
   "outputs": [],
   "source": [
    "grid_search = GridSearchCV(estimator = tuned_KNeighborsClassifier, param_grid = param_grid, \n",
    "                          cv = 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "fda4593e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, estimator=KNeighborsClassifier(),\n",
       "             param_grid={'algorithm': ['brute'], 'leaf_size': [30],\n",
       "                         'metric': ['minkowski'], 'metric_params': [None],\n",
       "                         'n_jobs': [None], 'n_neighbors': [5], 'p': [1],\n",
       "                         'weights': ['uniform', 'distance']})"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_search.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "54c065eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'algorithm': 'brute', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 5, 'p': 1, 'weights': 'uniform'}\n"
     ]
    }
   ],
   "source": [
    "print(grid_search.best_params_)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d401e6d4",
   "metadata": {},
   "source": [
    "# Splitting Data for Training and Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "57619331",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 39)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f901aeef",
   "metadata": {},
   "source": [
    "# KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "15fd9ac9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(algorithm='brute', n_jobs=-1, n_neighbors=2, p=1)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "KNeighborsClassifier = KNeighborsClassifier(algorithm = 'brute',\n",
    "                                            leaf_size = 30,\n",
    "                                            metric = 'minkowski',\n",
    "                                            metric_params= None,\n",
    "                                            n_jobs = -1,\n",
    "                                            n_neighbors = 2,\n",
    "                                            p = 1,\n",
    "                                            weights = 'uniform')\n",
    "KNeighborsClassifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "da059a26",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred2 = KNeighborsClassifier.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "1d358310",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 89.47271094204046\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred2)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred2)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5e0d6dfd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.92      0.98      0.95     20040\n",
      "           1       0.79      0.79      0.79       402\n",
      "           2       0.84      0.75      0.79       254\n",
      "           3       0.79      0.71      0.75       368\n",
      "           4       0.89      0.89      0.89       285\n",
      "           5       0.84      0.83      0.83       381\n",
      "           6       0.81      0.73      0.77       326\n",
      "           7       0.81      0.84      0.83       250\n",
      "           8       0.85      0.72      0.78       296\n",
      "           9       0.71      0.81      0.76       274\n",
      "          10       0.93      0.62      0.75       321\n",
      "          11       0.75      0.61      0.67       257\n",
      "          12       0.61      0.31      0.41       310\n",
      "          13       0.85      0.77      0.81       324\n",
      "          14       0.80      0.74      0.77       332\n",
      "          15       0.84      0.81      0.82       285\n",
      "          16       0.71      0.66      0.68       306\n",
      "          17       0.85      0.71      0.77       248\n",
      "          18       0.90      0.85      0.87       335\n",
      "          19       0.86      0.72      0.78       316\n",
      "          20       0.91      0.74      0.82       273\n",
      "          21       0.78      0.79      0.78       337\n",
      "          22       0.85      0.82      0.83       295\n",
      "          23       0.79      0.67      0.73       297\n",
      "          24       0.78      0.72      0.75       370\n",
      "          25       0.81      0.74      0.78       296\n",
      "          26       0.83      0.79      0.81       184\n",
      "          27       0.93      0.83      0.88       290\n",
      "          28       0.83      0.84      0.83       332\n",
      "          29       0.86      0.70      0.77       435\n",
      "          30       0.85      0.91      0.88       325\n",
      "          31       0.86      0.84      0.85       387\n",
      "          32       0.90      0.85      0.87       388\n",
      "          33       0.88      0.84      0.86       380\n",
      "          34       0.87      0.80      0.83       359\n",
      "          35       0.88      0.87      0.87       424\n",
      "          36       0.83      0.83      0.83       314\n",
      "          37       0.86      0.78      0.82       288\n",
      "          38       0.88      0.85      0.86       324\n",
      "          39       0.90      0.78      0.84       379\n",
      "          40       0.87      0.88      0.87       430\n",
      "          41       0.89      0.87      0.88       405\n",
      "          42       0.86      0.87      0.87       344\n",
      "          43       0.79      0.82      0.81       405\n",
      "          44       0.88      0.75      0.81       333\n",
      "          45       0.90      0.84      0.87       459\n",
      "          46       0.93      0.86      0.89       353\n",
      "          47       0.90      0.81      0.85       421\n",
      "          48       0.96      0.82      0.88       375\n",
      "          49       0.98      0.94      0.96       403\n",
      "          50       0.94      0.85      0.89       456\n",
      "          51       0.97      0.91      0.94       429\n",
      "          52       0.98      0.92      0.95       454\n",
      "\n",
      "    accuracy                           0.89     37854\n",
      "   macro avg       0.85      0.79      0.82     37854\n",
      "weighted avg       0.89      0.89      0.89     37854\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred2))\n",
    "\n",
    "cm = confusion_matrix(y_pred2, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8d41935",
   "metadata": {},
   "source": [
    "# Evaluation -- KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "bd1c5fe9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 1.4320547366196439\n",
      "MSE: 37.21786336978919\n",
      "RMSE: 6.100644504459278\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred2))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred2))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred2)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "de3e3c02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.8921752980620343\n",
      "Recall Score :  0.8947271094204047\n",
      "f1_score :  0.8913968571800897\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred2, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred2,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred2,average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3af3795d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c3c11c59",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e954c84",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3eb4ea2d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1620cf63",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "228ff373",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fcda6e09",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d71e68c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b4d0ab6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "66538ecf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d76a189a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2f33f6e7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
